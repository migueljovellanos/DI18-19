/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import controlador.GestionAplicacion;
import cronometro.LlegadaListener;
import java.util.ArrayList;
import modelo.Carrera;
import modelo.CorredorParaCarrera;

/**
 *
 * @author Miguel
 */
public class JDCronometro extends javax.swing.JDialog {
    
    private final GestionAplicacion gestion;
    private final Carrera carrera;
    
    public JDCronometro(java.awt.Dialog parent, boolean modal, GestionAplicacion gestion, Carrera carreraSeleccionada) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        this.gestion = gestion;
        this.carrera = carreraSeleccionada;
        jLNombreCarrera.setText(carrera.getNombre());
        cronometro1.rellenarCombo(getArrayDorsales());
        cronometro1.cambiarTextoBotonFinalizar("Finalizar Carrera");
        cronometro1.addListener(new LlegadaListener() {
            @Override
            public void registraLlegada(int dorsal, String tiempo) {
                ArrayList<CorredorParaCarrera> corredores = carrera.getCorredores();
                for (CorredorParaCarrera corredor : corredores) {
                    if (corredor.getDorsal() == dorsal) {
                        if (corredor.getTiempo().equals("00:00:00")) {
                            corredor.setTiempo(tiempo);
                            if (corredor.getDorsal() < 10) {
                                jTextAreaLog.append(corredor.getDorsal() + " ------------ " + corredor.getTiempo() + "\n");
                            } else if (corredor.getDorsal() < 100) {
                                jTextAreaLog.append(corredor.getDorsal() + " ----------- " + corredor.getTiempo() + "\n");
                            } else if (corredor.getDorsal() < 1000) {
                                jTextAreaLog.append(corredor.getDorsal() + " ---------- " + corredor.getTiempo() + "\n");
                            } else if (corredor.getDorsal() < 10000) {
                                jTextAreaLog.append(corredor.getDorsal() + " --------- " + corredor.getTiempo() + "\n");
                            } else {
                                jTextAreaLog.append(corredor.getDorsal() + " -------- " + corredor.getTiempo() + "\n");
                            }
                        }
                    }
                }
            }
        });
        jTextAreaLog.append("\ndorsal ----- tiempo \n");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLNombreCarrera = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaLog = new javax.swing.JTextArea();
        cronometro1 = new cronometro.Cronometro();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLNombreCarrera.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLNombreCarrera.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLNombreCarrera.setText(org.openide.util.NbBundle.getMessage(JDCronometro.class, "JDCronometro.jLNombreCarrera.text")); // NOI18N

        jTextAreaLog.setEditable(false);
        jTextAreaLog.setColumns(20);
        jTextAreaLog.setRows(5);
        jTextAreaLog.setText(org.openide.util.NbBundle.getMessage(JDCronometro.class, "JDCronometro.jTextAreaLog.text")); // NOI18N
        jScrollPane1.setViewportView(jTextAreaLog);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLNombreCarrera, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(cronometro1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLNombreCarrera, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cronometro1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private cronometro.Cronometro cronometro1;
    private javax.swing.JLabel jLNombreCarrera;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaLog;
    // End of variables declaration//GEN-END:variables

    private ArrayList<String> getArrayDorsales() {
        ArrayList<CorredorParaCarrera> corredores = carrera.getCorredores();
        ArrayList<String> dorsales = new ArrayList<>();
        for (CorredorParaCarrera corredor : corredores) {
            dorsales.add(String.valueOf(corredor.getDorsal()));
        }
        return dorsales;
    }
    
}
