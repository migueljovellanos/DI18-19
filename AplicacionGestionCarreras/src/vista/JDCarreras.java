/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import controlador.GestionAplicacion;
import java.awt.Component;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import mdlaf.utils.MaterialColors;
import modelo.Carrera;
import modelo.CorredorParaCarrera;
import vista.tableModels.TableModelCarreras;

/**
 *
 * @author Miguel
 */
public class JDCarreras extends javax.swing.JDialog {

    private final GestionAplicacion gestion;

    /**
     * @param parent
     * @param modal
     * @param gestion
     */
    public JDCarreras(java.awt.Frame parent, boolean modal, GestionAplicacion gestion) {
        super(parent, modal);
        this.gestion = gestion;
        initComponents();
        this.setLocationRelativeTo(null);
        jComboBoxTipoCarrear.setSelectedIndex(0);
        pintartabla();
        jTCarreras.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent lse) {
                if (jTCarreras.getSelectedRow() == -1) {
                    jBEliminarCarrera.setEnabled(false);
                    jBModificarCarrera.setEnabled(false);
                } else {
                    jBEliminarCarrera.setEnabled(true);
                    jBModificarCarrera.setEnabled(true);
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jBCrearCarrera = new javax.swing.JButton();
        jBGuardarCarreras = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTCarreras = new javax.swing.JTable();
        jBModificarCarrera = new javax.swing.JButton();
        jBEliminarCarrera = new javax.swing.JButton();
        jComboBoxTipoCarrear = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jBExportarCarrera = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jBCrearCarrera.setText("Crear carrera");
        jBCrearCarrera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCrearCarreraActionPerformed(evt);
            }
        });

        jBGuardarCarreras.setText("Guardar carreras");
        jBGuardarCarreras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBGuardarCarrerasActionPerformed(evt);
            }
        });

        jTCarreras.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTCarreras);

        jBModificarCarrera.setText("Modificar carrera");
        jBModificarCarrera.setEnabled(false);
        jBModificarCarrera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBModificarCarreraActionPerformed(evt);
            }
        });

        jBEliminarCarrera.setText("Eliminar carrera");
        jBEliminarCarrera.setEnabled(false);
        jBEliminarCarrera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEliminarCarreraActionPerformed(evt);
            }
        });

        jComboBoxTipoCarrear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todas", "Finalizadas", "Pendientes", " " }));
        jComboBoxTipoCarrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxTipoCarrearActionPerformed(evt);
            }
        });

        jLabel1.setText("Tipo de carrera :");

        jBExportarCarrera.setText("Exportar carrera");
        jBExportarCarrera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBExportarCarreraActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBModificarCarrera, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBCrearCarrera, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBEliminarCarrera, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBGuardarCarreras, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBExportarCarrera)
                    .addComponent(jComboBoxTipoCarrear, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 595, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxTipoCarrear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jBCrearCarrera)
                        .addGap(18, 18, 18)
                        .addComponent(jBModificarCarrera)
                        .addGap(18, 18, 18)
                        .addComponent(jBEliminarCarrera)
                        .addGap(18, 18, 18)
                        .addComponent(jBGuardarCarreras)
                        .addGap(18, 18, 18)
                        .addComponent(jBExportarCarrera)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBCrearCarreraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCrearCarreraActionPerformed
        JDCreacionCarrera creacion = new JDCreacionCarrera(this, true, gestion);
        creacion.setVisible(true);
        pintartabla();
    }//GEN-LAST:event_jBCrearCarreraActionPerformed

    private void jBGuardarCarrerasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBGuardarCarrerasActionPerformed
        gestion.GuardarCsvCarreras();
    }//GEN-LAST:event_jBGuardarCarrerasActionPerformed

    private void jBModificarCarreraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBModificarCarreraActionPerformed
        int seleccionado = jTCarreras.convertRowIndexToModel(jTCarreras.getSelectedRow());
        Carrera carrera = gestion.getCarreras().get(seleccionado);
        JDCreacionCarrera dialogoModificar = new JDCreacionCarrera(this, true, gestion, carrera);
        dialogoModificar.setVisible(true);
        pintartabla();
    }//GEN-LAST:event_jBModificarCarreraActionPerformed

    private void jBEliminarCarreraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEliminarCarreraActionPerformed
        int seleccionado = jTCarreras.convertRowIndexToModel(jTCarreras.getSelectedRow());
        Carrera carreraSeleccionada = gestion.getCarreras().get(seleccionado);
        gestion.getCarreras().remove(carreraSeleccionada);
        pintartabla();
    }//GEN-LAST:event_jBEliminarCarreraActionPerformed

    private void jComboBoxTipoCarrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxTipoCarrearActionPerformed
        pintartabla();
    }//GEN-LAST:event_jComboBoxTipoCarrearActionPerformed

    private void jBExportarCarreraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBExportarCarreraActionPerformed
        int[] selectedRows = jTCarreras.getSelectedRows();
        ArrayList<Carrera> carreras = gestion.getCarreras();
        StringBuilder texto = new StringBuilder();
        if (selectedRows.length > 0) {
            for (Carrera carrera : carreras) {
                texto.append(carrera.getNombre()).append("\n");
                texto.append(utils.Utils.SDF.format(carrera.getFecha())).append("\n");
                ArrayList<CorredorParaCarrera> corredores = carrera.getCorredores();
                corredores.sort(new ComparatorDorsales());
                if (!corredores.isEmpty()) {
                    for (CorredorParaCarrera corredor : corredores) {
                        texto.append(corredor.getDorsal());
                        texto.append(" / ").append(corredor.getTiempo());
                        texto.append(" / ").append(corredor.getNombre());
                        texto.append("\n");
                    }
                }
                File file = new File(carrera.getNombre() + ".txt");
                BufferedWriter writer;
                try {
                    writer = new BufferedWriter(new FileWriter(file));
                    writer.write(texto.toString());
                } catch (IOException ex) {
                    Logger.getLogger(JDCarreras.class.getName()).log(Level.SEVERE, null, ex);
                }
                texto = new StringBuilder();
            }
        }

    }//GEN-LAST:event_jBExportarCarreraActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBCrearCarrera;
    private javax.swing.JButton jBEliminarCarrera;
    private javax.swing.JButton jBExportarCarrera;
    private javax.swing.JButton jBGuardarCarreras;
    private javax.swing.JButton jBModificarCarrera;
    private javax.swing.JComboBox<String> jComboBoxTipoCarrear;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTCarreras;
    // End of variables declaration//GEN-END:variables

    private void pintartabla() {
        ArrayList<Carrera> listaCarreras;
        switch (jComboBoxTipoCarrear.getSelectedIndex()) {
            case 0:
                listaCarreras = gestion.getCarreras();
                break;
            case 1:
                listaCarreras = gestion.getCarrerasFinalizadas();
                break;
            default:
                listaCarreras = gestion.getCarrerasProximas();
                break;
        }
        TableModelCarreras modelo = new TableModelCarreras(listaCarreras);
        jTCarreras.setModel(modelo);
        TableRowSorter<TableModel> elQueOrdena = new TableRowSorter<>(modelo);
        jTCarreras.setRowSorter(elQueOrdena);
        jTCarreras.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                String status = (String) table.getModel().getValueAt(row, 0);
                if ("SI".equals(status)) {
                    setBackground(MaterialColors.BLUE_GRAY_300);
                } else {
                    setBackground(table.getBackground());
                    setForeground(table.getForeground());
                }
                return this;
            }

        });
    }
    // End of variables declaration                   

    private static class ComparatorDorsales implements Comparator<CorredorParaCarrera> {

        public ComparatorDorsales() {
        }

        @Override
        public int compare(CorredorParaCarrera c1, CorredorParaCarrera c2) {
            int dorsal1 = c1.getDorsal();
            int dorsal2 = c2.getDorsal();
            if (dorsal1 > dorsal2) {
                return 1;
            } else if (dorsal1 < dorsal2) {
                return -1;
            } else {
                return 0;
            }
        }
    }
}
