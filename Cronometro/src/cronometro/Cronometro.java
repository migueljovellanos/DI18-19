/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cronometro;

import java.util.ArrayList;
import java.util.Timer;
import java.util.TimerTask;

/**
 *
 * @author Miguel
 */
public class Cronometro extends javax.swing.JPanel {

    private int minutos;
    private int segundos;
    private int milisegundos;
    private boolean iniciado = false;
    private Timer timer;
    private LlegadaListener llegadaListener;

    /**
     * Creates new form Cronometro
     */
    public Cronometro() {
        initComponents();
        jLCronometroTexto.setText(minutos + ":" + segundos + ":" + milisegundos);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLCronometroTexto = new javax.swing.JLabel();
        jBIniciar = new javax.swing.JButton();
        jBFinalizar = new javax.swing.JButton();
        jBReiniciar = new javax.swing.JButton();
        jComboBoxDorsales = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();

        jLCronometroTexto.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLCronometroTexto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLCronometroTexto.setText("00:00:000");
        jLCronometroTexto.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jBIniciar.setText("Iniciar cronometro");
        jBIniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBIniciarActionPerformed(evt);
            }
        });

        jBFinalizar.setText("Parar cronometro");
        jBFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBFinalizarActionPerformed(evt);
            }
        });

        jBReiniciar.setText("Reiniciar");
        jBReiniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBReiniciarActionPerformed(evt);
            }
        });

        jButton1.setText("Registrar tiempo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLCronometroTexto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(83, 83, 83))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jBIniciar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBReiniciar, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBFinalizar))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jComboBoxDorsales, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(48, 48, 48)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLCronometroTexto, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBIniciar)
                    .addComponent(jBFinalizar)
                    .addComponent(jBReiniciar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxDorsales, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addContainerGap(12, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jBIniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBIniciarActionPerformed
        if (iniciado) {
            timer.cancel();
        }
        iniciado = true;
        timer = new Timer();
        timer.schedule(new TimerTask() {
            @Override
            public void run() {
                milisegundos++;
                if (milisegundos == 1000) {
                    segundos++;
                    milisegundos = 0;
                }
                if (segundos == 60) {
                    minutos++;
                    segundos = 0;
                }
                jLCronometroTexto.setText(minutos + ":" + segundos + ":" + milisegundos);
            }
        }, 0, 1);
    }//GEN-LAST:event_jBIniciarActionPerformed

    private void jBFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBFinalizarActionPerformed
        timer.cancel();
    }//GEN-LAST:event_jBFinalizarActionPerformed

    private void jBReiniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBReiniciarActionPerformed
        timer.cancel();
        milisegundos = 0;
        segundos = 0;
        minutos = 0;
        jLCronometroTexto.setText(minutos + ":" + segundos + ":" + milisegundos);
    }//GEN-LAST:event_jBReiniciarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (llegadaListener != null) {
            llegadaListener.registraLlegada(Integer.parseInt(jComboBoxDorsales.getSelectedItem().toString()), getTiempo());
        }    }//GEN-LAST:event_jButton1ActionPerformed

    public void rellenarCombo(ArrayList array) {
        ArrayList lista = array;
        for (Object object : lista) {
            jComboBoxDorsales.addItem(String.valueOf(object));
        }
    }

    public String getTiempo() {
        String tiempo = minutos + ":" + segundos + ":" + milisegundos;
        return tiempo;
    }

    public void addListener(LlegadaListener llegada) {
        this.llegadaListener = llegada;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBFinalizar;
    private javax.swing.JButton jBIniciar;
    private javax.swing.JButton jBReiniciar;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBoxDorsales;
    private javax.swing.JLabel jLCronometroTexto;
    // End of variables declaration//GEN-END:variables

    public void cambiarTextoBotonFinalizar(String finalizar_Carrera) {
        jBFinalizar.setText(finalizar_Carrera);
    }
}
